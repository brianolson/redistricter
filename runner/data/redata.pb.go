// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.12.3
// source: redata.proto

package data

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// intpoints/fpoints, population, area, ubids and recnos should all have the same length.
type RedistricterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// only one of intpoints or fpoints should have any data in it.
	Intpoints  []int32   `protobuf:"varint,1,rep,name=intpoints" json:"intpoints,omitempty"` // lon,lat pairs, microdegrees
	Fpoints    []float64 `protobuf:"fixed64,2,rep,name=fpoints" json:"fpoints,omitempty"`    // lon,lat pairs, degrees
	Population []int32   `protobuf:"varint,3,rep,name=population" json:"population,omitempty"`
	Area       []uint64  `protobuf:"varint,4,rep,name=area" json:"area,omitempty"`     // square meters
	Ubids      []uint64  `protobuf:"varint,5,rep,name=ubids" json:"ubids,omitempty"`   // universal block identifier (my internal number), decimal digits {state, county, tract, block}: SSCCCTTTTTTBBBB
	Recnos     []int32   `protobuf:"varint,6,rep,name=recnos" json:"recnos,omitempty"` // LOGRECNO
	Edges      []int32   `protobuf:"varint,7,rep,name=edges" json:"edges,omitempty"`   // index,index pairs
	// Default number of districts for this data set.
	// Probably the number of US House districts.
	NumDistricts *int32                    `protobuf:"varint,8,opt,name=numDistricts" json:"numDistricts,omitempty"`
	Other        []*RedistricterData_Other `protobuf:"group,9,rep,name=Other,json=other" json:"other,omitempty"`
	// per-block place id (originally 5 digit non-zero decimal int)
	Place []uint32 `protobuf:"varint,12,rep,name=place" json:"place,omitempty"`
}

func (x *RedistricterData) Reset() {
	*x = RedistricterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedistricterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedistricterData) ProtoMessage() {}

func (x *RedistricterData) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedistricterData.ProtoReflect.Descriptor instead.
func (*RedistricterData) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{0}
}

func (x *RedistricterData) GetIntpoints() []int32 {
	if x != nil {
		return x.Intpoints
	}
	return nil
}

func (x *RedistricterData) GetFpoints() []float64 {
	if x != nil {
		return x.Fpoints
	}
	return nil
}

func (x *RedistricterData) GetPopulation() []int32 {
	if x != nil {
		return x.Population
	}
	return nil
}

func (x *RedistricterData) GetArea() []uint64 {
	if x != nil {
		return x.Area
	}
	return nil
}

func (x *RedistricterData) GetUbids() []uint64 {
	if x != nil {
		return x.Ubids
	}
	return nil
}

func (x *RedistricterData) GetRecnos() []int32 {
	if x != nil {
		return x.Recnos
	}
	return nil
}

func (x *RedistricterData) GetEdges() []int32 {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *RedistricterData) GetNumDistricts() int32 {
	if x != nil && x.NumDistricts != nil {
		return *x.NumDistricts
	}
	return 0
}

func (x *RedistricterData) GetOther() []*RedistricterData_Other {
	if x != nil {
		return x.Other
	}
	return nil
}

func (x *RedistricterData) GetPlace() []uint32 {
	if x != nil {
		return x.Place
	}
	return nil
}

// For each block, a list of pixels (x,y coords) to draw.
type MapRasterization struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block []*MapRasterization_Block `protobuf:"group,1,rep,name=Block,json=block" json:"block,omitempty"`
	Sizex *int32                    `protobuf:"varint,4,opt,name=sizex" json:"sizex,omitempty"`
	Sizey *int32                    `protobuf:"varint,5,opt,name=sizey" json:"sizey,omitempty"`
}

func (x *MapRasterization) Reset() {
	*x = MapRasterization{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapRasterization) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapRasterization) ProtoMessage() {}

func (x *MapRasterization) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapRasterization.ProtoReflect.Descriptor instead.
func (*MapRasterization) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{1}
}

func (x *MapRasterization) GetBlock() []*MapRasterization_Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *MapRasterization) GetSizex() int32 {
	if x != nil && x.Sizex != nil {
		return *x.Sizex
	}
	return 0
}

func (x *MapRasterization) GetSizey() int32 {
	if x != nil && x.Sizey != nil {
		return *x.Sizey
	}
	return 0
}

type TableFileDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the containing table file
	Name  *string                       `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Table []*TableFileDescription_Table `protobuf:"group,2,rep,name=Table,json=table" json:"table,omitempty"`
}

func (x *TableFileDescription) Reset() {
	*x = TableFileDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableFileDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableFileDescription) ProtoMessage() {}

func (x *TableFileDescription) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableFileDescription.ProtoReflect.Descriptor instead.
func (*TableFileDescription) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{2}
}

func (x *TableFileDescription) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TableFileDescription) GetTable() []*TableFileDescription_Table {
	if x != nil {
		return x.Table
	}
	return nil
}

type StatLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Generation        *int32   `protobuf:"varint,1,req,name=generation" json:"generation,omitempty"`
	Kmpp              *float64 `protobuf:"fixed64,2,req,name=kmpp" json:"kmpp,omitempty"`
	AveragePopulation *float64 `protobuf:"fixed64,3,req,name=averagePopulation" json:"averagePopulation,omitempty"`
	PopStdDev         *float64 `protobuf:"fixed64,4,req,name=popStdDev" json:"popStdDev,omitempty"`
	MaxPop            *int32   `protobuf:"varint,5,req,name=maxPop" json:"maxPop,omitempty"`
	MinPop            *int32   `protobuf:"varint,6,req,name=minPop" json:"minPop,omitempty"`
	MedianPop         *int32   `protobuf:"varint,7,req,name=medianPop" json:"medianPop,omitempty"`
	NoDistrictBlocks  *int32   `protobuf:"varint,8,opt,name=noDistrictBlocks" json:"noDistrictBlocks,omitempty"`
	NoDistrictPop     *int32   `protobuf:"varint,9,opt,name=noDistrictPop" json:"noDistrictPop,omitempty"`
	KmppVariability   *float64 `protobuf:"fixed64,10,opt,name=kmppVariability" json:"kmppVariability,omitempty"`
	SpreadVariability *float64 `protobuf:"fixed64,11,opt,name=spreadVariability" json:"spreadVariability,omitempty"`
}

func (x *StatLogEntry) Reset() {
	*x = StatLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatLogEntry) ProtoMessage() {}

func (x *StatLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatLogEntry.ProtoReflect.Descriptor instead.
func (*StatLogEntry) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{3}
}

func (x *StatLogEntry) GetGeneration() int32 {
	if x != nil && x.Generation != nil {
		return *x.Generation
	}
	return 0
}

func (x *StatLogEntry) GetKmpp() float64 {
	if x != nil && x.Kmpp != nil {
		return *x.Kmpp
	}
	return 0
}

func (x *StatLogEntry) GetAveragePopulation() float64 {
	if x != nil && x.AveragePopulation != nil {
		return *x.AveragePopulation
	}
	return 0
}

func (x *StatLogEntry) GetPopStdDev() float64 {
	if x != nil && x.PopStdDev != nil {
		return *x.PopStdDev
	}
	return 0
}

func (x *StatLogEntry) GetMaxPop() int32 {
	if x != nil && x.MaxPop != nil {
		return *x.MaxPop
	}
	return 0
}

func (x *StatLogEntry) GetMinPop() int32 {
	if x != nil && x.MinPop != nil {
		return *x.MinPop
	}
	return 0
}

func (x *StatLogEntry) GetMedianPop() int32 {
	if x != nil && x.MedianPop != nil {
		return *x.MedianPop
	}
	return 0
}

func (x *StatLogEntry) GetNoDistrictBlocks() int32 {
	if x != nil && x.NoDistrictBlocks != nil {
		return *x.NoDistrictBlocks
	}
	return 0
}

func (x *StatLogEntry) GetNoDistrictPop() int32 {
	if x != nil && x.NoDistrictPop != nil {
		return *x.NoDistrictPop
	}
	return 0
}

func (x *StatLogEntry) GetKmppVariability() float64 {
	if x != nil && x.KmppVariability != nil {
		return *x.KmppVariability
	}
	return 0
}

func (x *StatLogEntry) GetSpreadVariability() float64 {
	if x != nil && x.SpreadVariability != nil {
		return *x.SpreadVariability
	}
	return 0
}

type RedistricterData_Other struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of this data
	Name *string `protobuf:"bytes,10,req,name=name" json:"name,omitempty"`
	// odata should be the same length as point/area/ubids/recnos
	// It was probably imported from Sf1 .uf1 files based on logrecno.
	Odata []int32 `protobuf:"varint,11,rep,name=odata" json:"odata,omitempty"`
}

func (x *RedistricterData_Other) Reset() {
	*x = RedistricterData_Other{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RedistricterData_Other) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RedistricterData_Other) ProtoMessage() {}

func (x *RedistricterData_Other) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RedistricterData_Other.ProtoReflect.Descriptor instead.
func (*RedistricterData_Other) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RedistricterData_Other) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RedistricterData_Other) GetOdata() []int32 {
	if x != nil {
		return x.Odata
	}
	return nil
}

type MapRasterization_Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// decimal digits {state, county, tract, block}: SSCCCTTTTTTBBBB
	Ubid *uint64 `protobuf:"varint,2,opt,name=ubid" json:"ubid,omitempty"`
	// "logical record number"
	Recno *int32 `protobuf:"varint,6,opt,name=recno" json:"recno,omitempty"`
	// String form preferred by TIGER data, concatenated state,county,tract,block
	Blockid []byte `protobuf:"bytes,7,opt,name=blockid" json:"blockid,omitempty"`
	// The pixels associated with this block. (x,y) pairs.
	Xy []int32 `protobuf:"varint,3,rep,name=xy" json:"xy,omitempty"`
	// Pixels that should get 'water' treatment.
	Waterxy []int32 `protobuf:"varint,8,rep,name=waterxy" json:"waterxy,omitempty"`
}

func (x *MapRasterization_Block) Reset() {
	*x = MapRasterization_Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapRasterization_Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapRasterization_Block) ProtoMessage() {}

func (x *MapRasterization_Block) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapRasterization_Block.ProtoReflect.Descriptor instead.
func (*MapRasterization_Block) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{1, 0}
}

func (x *MapRasterization_Block) GetUbid() uint64 {
	if x != nil && x.Ubid != nil {
		return *x.Ubid
	}
	return 0
}

func (x *MapRasterization_Block) GetRecno() int32 {
	if x != nil && x.Recno != nil {
		return *x.Recno
	}
	return 0
}

func (x *MapRasterization_Block) GetBlockid() []byte {
	if x != nil {
		return x.Blockid
	}
	return nil
}

func (x *MapRasterization_Block) GetXy() []int32 {
	if x != nil {
		return x.Xy
	}
	return nil
}

func (x *MapRasterization_Block) GetWaterxy() []int32 {
	if x != nil {
		return x.Waterxy
	}
	return nil
}

type TableFileDescription_Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the name of the table (group of columns)
	Table            *string                              `protobuf:"bytes,3,req,name=table" json:"table,omitempty"`
	TableDescription *string                              `protobuf:"bytes,4,opt,name=tableDescription" json:"tableDescription,omitempty"`
	Column           []*TableFileDescription_Table_Column `protobuf:"group,5,rep,name=Column,json=column" json:"column,omitempty"`
}

func (x *TableFileDescription_Table) Reset() {
	*x = TableFileDescription_Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableFileDescription_Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableFileDescription_Table) ProtoMessage() {}

func (x *TableFileDescription_Table) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableFileDescription_Table.ProtoReflect.Descriptor instead.
func (*TableFileDescription_Table) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{2, 0}
}

func (x *TableFileDescription_Table) GetTable() string {
	if x != nil && x.Table != nil {
		return *x.Table
	}
	return ""
}

func (x *TableFileDescription_Table) GetTableDescription() string {
	if x != nil && x.TableDescription != nil {
		return *x.TableDescription
	}
	return ""
}

func (x *TableFileDescription_Table) GetColumn() []*TableFileDescription_Table_Column {
	if x != nil {
		return x.Column
	}
	return nil
}

type TableFileDescription_Table_Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// number of column within table file
	Column *int32 `protobuf:"varint,6,req,name=column" json:"column,omitempty"`
	// ['total','male','30-35'] or similar
	Path []string `protobuf:"bytes,7,rep,name=path" json:"path,omitempty"`
}

func (x *TableFileDescription_Table_Column) Reset() {
	*x = TableFileDescription_Table_Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableFileDescription_Table_Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableFileDescription_Table_Column) ProtoMessage() {}

func (x *TableFileDescription_Table_Column) ProtoReflect() protoreflect.Message {
	mi := &file_redata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableFileDescription_Table_Column.ProtoReflect.Descriptor instead.
func (*TableFileDescription_Table_Column) Descriptor() ([]byte, []int) {
	return file_redata_proto_rawDescGZIP(), []int{2, 0, 0}
}

func (x *TableFileDescription_Table_Column) GetColumn() int32 {
	if x != nil && x.Column != nil {
		return *x.Column
	}
	return 0
}

func (x *TableFileDescription_Table_Column) GetPath() []string {
	if x != nil {
		return x.Path
	}
	return nil
}

var File_redata_proto protoreflect.FileDescriptor

var file_redata_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x72, 0x65, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde,
	0x02, 0x0a, 0x10, 0x52, 0x65, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x07, 0x66, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x62, 0x69, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05,
	0x75, 0x62, 0x69, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x63, 0x6e, 0x6f, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x63, 0x6e, 0x6f, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x64, 0x67, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x17, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x1a, 0x31, 0x0a, 0x05,
	0x4f, 0x74, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xe4, 0x01, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x52, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0a, 0x32, 0x17, 0x2e, 0x4d, 0x61, 0x70, 0x52, 0x61, 0x73, 0x74, 0x65, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a,
	0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x79, 0x1a,
	0x75, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x62, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x62, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x63, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x65, 0x63,
	0x6e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x78, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x78, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x77, 0x61, 0x74, 0x65, 0x72, 0x78, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x78, 0x79, 0x22, 0x9b, 0x02, 0x0a, 0x14, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0a, 0x32, 0x1b, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0xbb, 0x01, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0a, 0x32, 0x22, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x1a, 0x34,
	0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x22, 0x86, 0x03, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x4c, 0x6f, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x6d, 0x70, 0x70, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x01, 0x52, 0x04, 0x6b, 0x6d, 0x70, 0x70, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x01, 0x52, 0x11, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x50, 0x6f, 0x70,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x70, 0x53, 0x74,
	0x64, 0x44, 0x65, 0x76, 0x18, 0x04, 0x20, 0x02, 0x28, 0x01, 0x52, 0x09, 0x70, 0x6f, 0x70, 0x53,
	0x74, 0x64, 0x44, 0x65, 0x76, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x70, 0x18,
	0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x70, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x69, 0x6e, 0x50, 0x6f, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e, 0x50,
	0x6f, 0x70, 0x18, 0x07, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x6e,
	0x50, 0x6f, 0x70, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6e,
	0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x50, 0x6f, 0x70,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x6f, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x50, 0x6f, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x6b, 0x6d, 0x70, 0x70, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f,
	0x6b, 0x6d, 0x70, 0x70, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x2c, 0x0a, 0x11, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x73, 0x70, 0x72, 0x65,
	0x61, 0x64, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x23, 0x0a,
	0x17, 0x6f, 0x72, 0x67, 0x2e, 0x62, 0x6f, 0x6c, 0x73, 0x6f, 0x6e, 0x2e, 0x72, 0x65, 0x64, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x72, 0x48, 0x03, 0x5a, 0x06, 0x2e, 0x3b, 0x64, 0x61,
	0x74, 0x61,
}

var (
	file_redata_proto_rawDescOnce sync.Once
	file_redata_proto_rawDescData = file_redata_proto_rawDesc
)

func file_redata_proto_rawDescGZIP() []byte {
	file_redata_proto_rawDescOnce.Do(func() {
		file_redata_proto_rawDescData = protoimpl.X.CompressGZIP(file_redata_proto_rawDescData)
	})
	return file_redata_proto_rawDescData
}

var file_redata_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_redata_proto_goTypes = []interface{}{
	(*RedistricterData)(nil),                  // 0: RedistricterData
	(*MapRasterization)(nil),                  // 1: MapRasterization
	(*TableFileDescription)(nil),              // 2: TableFileDescription
	(*StatLogEntry)(nil),                      // 3: StatLogEntry
	(*RedistricterData_Other)(nil),            // 4: RedistricterData.Other
	(*MapRasterization_Block)(nil),            // 5: MapRasterization.Block
	(*TableFileDescription_Table)(nil),        // 6: TableFileDescription.Table
	(*TableFileDescription_Table_Column)(nil), // 7: TableFileDescription.Table.Column
}
var file_redata_proto_depIdxs = []int32{
	4, // 0: RedistricterData.other:type_name -> RedistricterData.Other
	5, // 1: MapRasterization.block:type_name -> MapRasterization.Block
	6, // 2: TableFileDescription.table:type_name -> TableFileDescription.Table
	7, // 3: TableFileDescription.Table.column:type_name -> TableFileDescription.Table.Column
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_redata_proto_init() }
func file_redata_proto_init() {
	if File_redata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_redata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedistricterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapRasterization); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableFileDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RedistricterData_Other); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapRasterization_Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableFileDescription_Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableFileDescription_Table_Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_redata_proto_goTypes,
		DependencyIndexes: file_redata_proto_depIdxs,
		MessageInfos:      file_redata_proto_msgTypes,
	}.Build()
	File_redata_proto = out.File
	file_redata_proto_rawDesc = nil
	file_redata_proto_goTypes = nil
	file_redata_proto_depIdxs = nil
}
